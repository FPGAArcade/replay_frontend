// This file is auto-generated by api_gen. DO NOT EDIT!

#[allow(unused_imports)]
use crate::manual::{get_last_error, Color, FlString, Result};

#[allow(unused_imports)]
use bitflags::bitflags;

#[allow(unused_imports)]
use crate::layout::*;

#[allow(unused_imports)]
use crate::math_data::*;

#[allow(unused_imports)]
use crate::image::*;

#[repr(C)]
pub struct UiFfiApi {
    pub(crate) data: *const core::ffi::c_void,
    pub(crate) image: unsafe extern "C" fn(data: *const core::ffi::c_void, image: u64),
}

#[cfg(feature = "static")]
extern "C" {
    pub fn fl_ui_image_impl(data: *const core::ffi::c_void, image: u64);
}

#[no_mangle]
pub static mut g_flowi_ui_api: *const UiFfiApi = std::ptr::null_mut();

#[repr(C)]
#[derive(Debug)]
pub struct Ui {
    _dummy: u32,
}

impl Ui {
    /// Draw image. Images can be created with [Image::create_from_file] and [Image::create_from_memory]
    pub fn image(image: Image) {
        unsafe {
            let _api = &*g_flowi_ui_api;
            #[cfg(feature = "static")]
            fl_ui_image_impl(_api.data, image.handle);
            #[cfg(any(feature = "dynamic", feature = "plugin"))]
            (_api.image)(_api.data, image.handle);
        }
    }
}
