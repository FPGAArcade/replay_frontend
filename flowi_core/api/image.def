mod math_data

enum ImageFormat {
    /// 8-bit per channel Red, Green and Blue
    Rgb,
    /// 8-bit per channel Red, Green, Blue and Alpha
    Rgba,
    /// 8-bit per channel Blue, Green and Red
    Bgr,
    /// 8-bit per channel Blue, Green and Red and Alpha
    Bgra,
    /// 8-bit per channel Alpha only
    Alpha,
}

enum ImageLoadStatus {
    /// The image is still loading
    Loading,
    /// The image has finished loading
    Loaded,
    /// The image failed to load
    Failed,
}

struct ImageInfo {
    /// Format of the image. See the ImageFormat enum
    format: u32,
    /// width of the image
    width: u32,
    /// height of the Image
    height: u32,
    /// Number of frames. This is 1 for static images and > 1 for animated images 
    frame_count: u32,
    /// How long each frame should be displayed for in milliseconds 
    frame_delay: u32,
}

struct ImageOptions {
    /// The scale of the image. This is useful for loading SVGs at different sizes.
    scale: Vec2,
    /// Set a size of the image (this will override the scale). if one component is set to 0 it will be calculated based on the aspect ratio of the image.
    size: Vec2,
}

#[attributes(Handle)]
struct Image {
    /// Async Load image from url/file. Supported formats are: JPG, PNG, SVG and GIF
    /// Notice that this will return a async handle so the data may not be acceassable directly.
    [static] load(url: String) -> Image,
    /// Async Load image from url/file. Supported formats are: JPG, PNG, SVG and GIF
    /// Notice that this will return a async handle so the data may not be acceassable directly.
    [static] load_with_options(url: String, options: *const ImageOptions) -> Image,
    /// Get the status of the image. See the [ImageLoadStatus] enum 
    [static] get_status(image: Image) -> ImageLoadStatus,
    /// Get info about the image. Will be null if the image hasn't loaded yet or failed to load.
    [static] get_info(image: Image) -> *const ImageInfo?,
    /// Get data from the image. Will be null if the image hasn't loaded yet or failed to load.
    [static] get_data(image: Image) -> [u8]?,
}

// vim: syntax=rust expandtab ts=4 sw=4

